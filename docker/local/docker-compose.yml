version: "3.8"
services:
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: hakan
      MONGO_INITDB_ROOT_PASSWORD: kay1983nar
      MONGO_INITDB_DATABASE: product
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - product-network
  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
    networks:
      - product-network
  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181
    networks:
      - product-network
  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
    networks:
      - product-network
  kafka:
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    image: product-kafka
    restart: always
    hostname: kafka
    ports:
      - 9092:9092
    networks:
      - product-network
  product-api:
    depends_on:
      - mongodb
    image: hakankaynar/product:latest
    ports:
      - 8080:8080
    networks:
      - product-network
networks:
  product-network:
    name: product-network
    attachable: true
